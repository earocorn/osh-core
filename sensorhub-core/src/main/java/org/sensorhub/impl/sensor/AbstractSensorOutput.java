/***************************** BEGIN LICENSE BLOCK ***************************

The contents of this file are subject to the Mozilla Public License, v. 2.0.
If a copy of the MPL was not distributed with this file, You can obtain one
at http://mozilla.org/MPL/2.0/.

Software distributed under the License is distributed on an "AS IS" basis,
WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
for the specific language governing rights and limitations under the License.
 
Copyright (C) 2012-2015 Sensia Software LLC. All Rights Reserved.
 
******************************* END LICENSE BLOCK ***************************/

package org.sensorhub.impl.sensor;

import org.sensorhub.api.data.IDataProducer;
import org.sensorhub.impl.data.AbstractDataInterface;
import org.slf4j.Logger;


/**
 * <p>
 * Class providing default implementation of common sensor data interface
 * API methods.
 * </p>
 *
 * @author Alex Robin
 * @param <T> Type of parent sensor
 * @since Nov 2, 2014
 */
public abstract class AbstractSensorOutput<T extends IDataProducer> extends AbstractDataInterface<T>
{
    protected final T parentSensor; // for backward compatibility
    
    
    /**
     * Constructs a new sensor output with the given name and attached to the
     * provided sensor module.<br/>
     * Events generated by this output will be published using the parent sensor's
     * event handler.
     * @param name output name
     * @param parentSensor parent sensor instance
     */
    protected AbstractSensorOutput(String name, T parentSensor)
    {
        this(name, parentSensor, null);
    }
    
    
    /**
     * Constructs a new sensor output with the given name and attached to the
     * provided sensor module.<br/>
     * @param name
     * @param parentSensor
     * @param log
     */
    protected AbstractSensorOutput(String name, T parentSensor, Logger log)
    {
        super(name, parentSensor, log);
        this.parentSensor = parentSensor;
    }

}
